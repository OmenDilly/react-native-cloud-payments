///
/// JChargeResult.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "ChargeResult.hpp"

#include "ChargeStatus.hpp"
#include "JChargeStatus.hpp"
#include <optional>
#include <string>

namespace margelo::nitro::cloudpayments {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "ChargeResult" and the the Kotlin data class "ChargeResult".
   */
  struct JChargeResult final: public jni::JavaClass<JChargeResult> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/cloudpayments/ChargeResult;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct ChargeResult by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    ChargeResult toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldTransactionId = clazz->getField<jni::JString>("transactionId");
      jni::local_ref<jni::JString> transactionId = this->getFieldValue(fieldTransactionId);
      static const auto fieldStatus = clazz->getField<JChargeStatus>("status");
      jni::local_ref<JChargeStatus> status = this->getFieldValue(fieldStatus);
      static const auto fieldReasonCode = clazz->getField<jni::JDouble>("reasonCode");
      jni::local_ref<jni::JDouble> reasonCode = this->getFieldValue(fieldReasonCode);
      static const auto fieldReasonMessage = clazz->getField<jni::JString>("reasonMessage");
      jni::local_ref<jni::JString> reasonMessage = this->getFieldValue(fieldReasonMessage);
      static const auto fieldPaReq = clazz->getField<jni::JString>("paReq");
      jni::local_ref<jni::JString> paReq = this->getFieldValue(fieldPaReq);
      static const auto fieldAcsUrl = clazz->getField<jni::JString>("acsUrl");
      jni::local_ref<jni::JString> acsUrl = this->getFieldValue(fieldAcsUrl);
      static const auto fieldSuccess = clazz->getField<jboolean>("success");
      jboolean success = this->getFieldValue(fieldSuccess);
      return ChargeResult(
        transactionId->toStdString(),
        status->toCpp(),
        reasonCode != nullptr ? std::make_optional(reasonCode->value()) : std::nullopt,
        reasonMessage != nullptr ? std::make_optional(reasonMessage->toStdString()) : std::nullopt,
        paReq != nullptr ? std::make_optional(paReq->toStdString()) : std::nullopt,
        acsUrl != nullptr ? std::make_optional(acsUrl->toStdString()) : std::nullopt,
        static_cast<bool>(success)
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JChargeResult::javaobject> fromCpp(const ChargeResult& value) {
      return newInstance(
        jni::make_jstring(value.transactionId),
        JChargeStatus::fromCpp(value.status),
        value.reasonCode.has_value() ? jni::JDouble::valueOf(value.reasonCode.value()) : nullptr,
        value.reasonMessage.has_value() ? jni::make_jstring(value.reasonMessage.value()) : nullptr,
        value.paReq.has_value() ? jni::make_jstring(value.paReq.value()) : nullptr,
        value.acsUrl.has_value() ? jni::make_jstring(value.acsUrl.value()) : nullptr,
        value.success
      );
    }
  };

} // namespace margelo::nitro::cloudpayments
