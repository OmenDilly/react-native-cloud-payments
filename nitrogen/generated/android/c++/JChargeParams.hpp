///
/// JChargeParams.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "ChargeParams.hpp"

#include <optional>
#include <string>

namespace margelo::nitro::cloudpayments {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "ChargeParams" and the the Kotlin data class "ChargeParams".
   */
  struct JChargeParams final: public jni::JavaClass<JChargeParams> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/cloudpayments/ChargeParams;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct ChargeParams by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    ChargeParams toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldAmount = clazz->getField<double>("amount");
      double amount = this->getFieldValue(fieldAmount);
      static const auto fieldCurrency = clazz->getField<jni::JString>("currency");
      jni::local_ref<jni::JString> currency = this->getFieldValue(fieldCurrency);
      static const auto fieldDescription = clazz->getField<jni::JString>("description");
      jni::local_ref<jni::JString> description = this->getFieldValue(fieldDescription);
      static const auto fieldAccountId = clazz->getField<jni::JString>("accountId");
      jni::local_ref<jni::JString> accountId = this->getFieldValue(fieldAccountId);
      static const auto fieldEmail = clazz->getField<jni::JString>("email");
      jni::local_ref<jni::JString> email = this->getFieldValue(fieldEmail);
      static const auto fieldCardCryptogram = clazz->getField<jni::JString>("cardCryptogram");
      jni::local_ref<jni::JString> cardCryptogram = this->getFieldValue(fieldCardCryptogram);
      static const auto fieldCardNumber = clazz->getField<jni::JString>("cardNumber");
      jni::local_ref<jni::JString> cardNumber = this->getFieldValue(fieldCardNumber);
      static const auto fieldExpDate = clazz->getField<jni::JString>("expDate");
      jni::local_ref<jni::JString> expDate = this->getFieldValue(fieldExpDate);
      static const auto fieldCvv = clazz->getField<jni::JString>("cvv");
      jni::local_ref<jni::JString> cvv = this->getFieldValue(fieldCvv);
      return ChargeParams(
        amount,
        currency->toStdString(),
        description->toStdString(),
        accountId != nullptr ? std::make_optional(accountId->toStdString()) : std::nullopt,
        email != nullptr ? std::make_optional(email->toStdString()) : std::nullopt,
        cardCryptogram != nullptr ? std::make_optional(cardCryptogram->toStdString()) : std::nullopt,
        cardNumber != nullptr ? std::make_optional(cardNumber->toStdString()) : std::nullopt,
        expDate != nullptr ? std::make_optional(expDate->toStdString()) : std::nullopt,
        cvv != nullptr ? std::make_optional(cvv->toStdString()) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JChargeParams::javaobject> fromCpp(const ChargeParams& value) {
      return newInstance(
        value.amount,
        jni::make_jstring(value.currency),
        jni::make_jstring(value.description),
        value.accountId.has_value() ? jni::make_jstring(value.accountId.value()) : nullptr,
        value.email.has_value() ? jni::make_jstring(value.email.value()) : nullptr,
        value.cardCryptogram.has_value() ? jni::make_jstring(value.cardCryptogram.value()) : nullptr,
        value.cardNumber.has_value() ? jni::make_jstring(value.cardNumber.value()) : nullptr,
        value.expDate.has_value() ? jni::make_jstring(value.expDate.value()) : nullptr,
        value.cvv.has_value() ? jni::make_jstring(value.cvv.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::cloudpayments
