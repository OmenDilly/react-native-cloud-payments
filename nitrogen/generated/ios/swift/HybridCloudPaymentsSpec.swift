///
/// HybridCloudPaymentsSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridCloudPaymentsSpec``
public protocol HybridCloudPaymentsSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func initialize(publicId: String) throws -> Promise<Bool>
  func generateCardCryptogram(params: CardCryptogramParams) throws -> Promise<String>
  func isCardNumberValid(cardNumber: String) throws -> Promise<Bool>
  func isExpDateValid(expDate: String) throws -> Promise<Bool>
  func show3ds(params: ThreeDsParams) throws -> Promise<ThreeDsResult>
  func finish3ds(transactionId: String) throws -> Promise<Bool>
  func charge(params: ChargeParams) throws -> Promise<ChargeResult>
}

/// See ``HybridCloudPaymentsSpec``
public class HybridCloudPaymentsSpec_base {
  private weak var cxxWrapper: HybridCloudPaymentsSpec_cxx? = nil
  public func getCxxWrapper() -> HybridCloudPaymentsSpec_cxx {
  #if DEBUG
    guard self is HybridCloudPaymentsSpec else {
      fatalError("`self` is not a `HybridCloudPaymentsSpec`! Did you accidentally inherit from `HybridCloudPaymentsSpec_base` instead of `HybridCloudPaymentsSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridCloudPaymentsSpec_cxx(self as! HybridCloudPaymentsSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the CloudPayments HybridObject.
 * Implement this protocol to create Swift-based instances of CloudPayments.
 * ```swift
 * class HybridCloudPayments : HybridCloudPaymentsSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridCloudPaymentsSpec = HybridCloudPaymentsSpec_protocol & HybridCloudPaymentsSpec_base
